/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Restuarant_management;
//inport statements for various packages that might be needed
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author koladeadegbaye
 */
public class HomePage extends javax.swing.JFrame {

    /**
     * Creates new form HomePage
     */
    public HomePage() {
        //calls the components function
        initComponents();
        
        //set the size and location of the window
        setSize(800,600);
        setLocation(300,150);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    //template code that is created by netbeans when using the design editor. cannot be editable but every item can be accessed. various objects include function names, variable definitions
    //panel creation, table creation, and more
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        food_inventory_panel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        show_menu_btn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        make_order_btn = new javax.swing.JButton();
        show_inventory_btn = new javax.swing.JButton();
        displayPanel = new javax.swing.JPanel();
        addItemPanel = new javax.swing.JPanel();
        addMenuID1 = new javax.swing.JTextField();
        addPrice1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        addItemName1 = new javax.swing.JTextField();
        addingTitlePanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        addItemBtn1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        addCategory1 = new javax.swing.JTextField();
        menuTabs = new javax.swing.JTabbedPane();
        menuPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        menuTable1 = new javax.swing.JTable();
        add_item_btn = new javax.swing.JButton();
        edit_item_btn = new javax.swing.JButton();
        delete_item_btn = new javax.swing.JButton();
        menuPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        menuTable2 = new javax.swing.JTable();
        menuPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        menuTable3 = new javax.swing.JTable();
        menuPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        menuTable4 = new javax.swing.JTable();
        menuPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        menuTable5 = new javax.swing.JTable();
        editItemPanel = new javax.swing.JPanel();
        editMenuID = new javax.swing.JTextField();
        editPrice = new javax.swing.JTextField();
        editMenuLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        editCategory = new javax.swing.JTextField();
        editItemName = new javax.swing.JTextField();
        editingTitlePanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        editBtn = new javax.swing.JButton();
        showInventoryPanel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        addingTitlePanel2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        showInventoryTable = new javax.swing.JTable();
        restockLabel = new javax.swing.JLabel();
        restockBtn = new javax.swing.JButton();
        makeOrderPanel = new javax.swing.JPanel();
        makeOrderTitlePanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        menuListPanel = new javax.swing.JTable();
        menuListLabel = new javax.swing.JLabel();
        addItemOrderBtn = new javax.swing.JButton();
        deleteItemOrderBtn = new javax.swing.JButton();
        quantityTxtField = new javax.swing.JTextField();
        quantityLabel = new javax.swing.JLabel();
        noTxtField = new javax.swing.JTextField();
        noLabel = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        orderTextArea = new javax.swing.JTextArea();
        dineInCheckBox = new javax.swing.JCheckBox();
        pickUpTextBox = new javax.swing.JCheckBox();
        show_orders_btn = new javax.swing.JButton();
        showOrderPanel = new javax.swing.JPanel();
        showOrderTitle = new javax.swing.JPanel();
        showOrderLabel = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        ordersPanel = new javax.swing.JTable();
        rmsTitlePanel = new javax.swing.JPanel();
        rmsTitleLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        rightIcon = new javax.swing.JLabel();

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Food Inventory");

        javax.swing.GroupLayout food_inventory_panelLayout = new javax.swing.GroupLayout(food_inventory_panel);
        food_inventory_panel.setLayout(food_inventory_panelLayout);
        food_inventory_panelLayout.setHorizontalGroup(
            food_inventory_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(food_inventory_panelLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        food_inventory_panelLayout.setVerticalGroup(
            food_inventory_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(food_inventory_panelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel7)
                .addContainerGap(571, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(94, 158, 145));
        jLabel1.setFont(new java.awt.Font("Al Nile", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("RESTAURANT MANAGEMENT SYSTEM");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.gray, java.awt.Color.lightGray, null, null));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTextField1.setText("jTextField1");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(842, 601));
        setSize(new java.awt.Dimension(842, 601));

        jPanel1.setBackground(new java.awt.Color(0, 78, 34));
        jPanel1.setMinimumSize(new java.awt.Dimension(208, 500));

        show_menu_btn.setBackground(new java.awt.Color(255, 255, 255));
        show_menu_btn.setForeground(new java.awt.Color(0, 102, 0));
        show_menu_btn.setText("Show menu");
        show_menu_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_menu_btnActionPerformed(evt);
            }
        });

        logoutBtn.setForeground(new java.awt.Color(0, 102, 0));
        logoutBtn.setText("Logout");
        logoutBtn.setPreferredSize(new java.awt.Dimension(50, 29));
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        make_order_btn.setForeground(new java.awt.Color(0, 102, 0));
        make_order_btn.setText("Make order");
        make_order_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                make_order_btnActionPerformed(evt);
            }
        });

        show_inventory_btn.setForeground(new java.awt.Color(0, 102, 0));
        show_inventory_btn.setText("Show inventory");
        show_inventory_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_inventory_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(show_inventory_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(show_menu_btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(make_order_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logoutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(show_menu_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(make_order_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(show_inventory_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(224, 224, 224)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        displayPanel.setBackground(new java.awt.Color(255, 255, 255));
        displayPanel.setMaximumSize(new java.awt.Dimension(600, 500));
        displayPanel.setMinimumSize(new java.awt.Dimension(450, 400));
        displayPanel.setPreferredSize(new java.awt.Dimension(601, 501));
        displayPanel.setSize(new java.awt.Dimension(600, 500));
        displayPanel.setLayout(new java.awt.CardLayout());

        addItemPanel.setBackground(new java.awt.Color(255, 255, 255));
        addItemPanel.setMaximumSize(new java.awt.Dimension(600, 500));
        addItemPanel.setMinimumSize(new java.awt.Dimension(450, 400));
        addItemPanel.setPreferredSize(new java.awt.Dimension(600, 500));
        addItemPanel.setSize(new java.awt.Dimension(600, 500));

        addMenuID1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMenuID1ActionPerformed(evt);
            }
        });

        addPrice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPrice1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Menu ID:");

        jLabel12.setText("Price:");

        jLabel13.setText("Item_name:");

        addItemName1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        addItemName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemName1ActionPerformed(evt);
            }
        });

        addingTitlePanel1.setBackground(new java.awt.Color(255, 255, 255));
        addingTitlePanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 78, 34), 2));

        jLabel15.setFont(new java.awt.Font("New Peninim MT", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 78, 34));
        jLabel15.setText("Adding an Item");

        javax.swing.GroupLayout addingTitlePanel1Layout = new javax.swing.GroupLayout(addingTitlePanel1);
        addingTitlePanel1.setLayout(addingTitlePanel1Layout);
        addingTitlePanel1Layout.setHorizontalGroup(
            addingTitlePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addingTitlePanel1Layout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(198, 198, 198))
        );
        addingTitlePanel1Layout.setVerticalGroup(
            addingTitlePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addingTitlePanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(17, 17, 17))
        );

        addItemBtn1.setText("Add New Item");
        addItemBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemBtn1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Category");

        addCategory1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategory1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addItemPanelLayout = new javax.swing.GroupLayout(addItemPanel);
        addItemPanel.setLayout(addItemPanelLayout);
        addItemPanelLayout.setHorizontalGroup(
            addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemPanelLayout.createSequentialGroup()
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addItemPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addingTitlePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addItemPanelLayout.createSequentialGroup()
                        .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addItemPanelLayout.createSequentialGroup()
                                .addGap(206, 206, 206)
                                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(addItemPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(41, 41, 41)
                                        .addComponent(addMenuID1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(addItemPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(24, 24, 24)
                                        .addComponent(addItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(addItemPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(addItemPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addCategory1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(addItemPanelLayout.createSequentialGroup()
                                .addGap(235, 235, 235)
                                .addComponent(jLabel11)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(addItemPanelLayout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addComponent(addItemBtn1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addItemPanelLayout.setVerticalGroup(
            addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addingTitlePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMenuID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(addItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCategory1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addItemBtn1)
                .addContainerGap(157, Short.MAX_VALUE))
        );

        displayPanel.add(addItemPanel, "card4");

        menuTabs.setPreferredSize(new java.awt.Dimension(600, 500));
        menuTabs.setSize(new java.awt.Dimension(600, 500));
        menuTabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTabsMouseClicked(evt);
            }
        });

        menuPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuPanel1MouseClicked(evt);
            }
        });

        menuTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Menu_ID:", "Item_name:", "Price:", "Category:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        menuTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(menuTable1);
        if (menuTable1.getColumnModel().getColumnCount() > 0) {
            menuTable1.getColumnModel().getColumn(0).setResizable(false);
            menuTable1.getColumnModel().getColumn(1).setResizable(false);
            menuTable1.getColumnModel().getColumn(2).setResizable(false);
            menuTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        add_item_btn.setForeground(new java.awt.Color(0, 102, 0));
        add_item_btn.setText("Add item");
        add_item_btn.setPreferredSize(new java.awt.Dimension(100, 29));
        add_item_btn.setSize(new java.awt.Dimension(100, 29));
        add_item_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_item_btnActionPerformed(evt);
            }
        });

        edit_item_btn.setForeground(new java.awt.Color(0, 102, 0));
        edit_item_btn.setText("Edit item");
        edit_item_btn.setSize(new java.awt.Dimension(100, 29));
        edit_item_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_item_btnActionPerformed(evt);
            }
        });

        delete_item_btn.setForeground(new java.awt.Color(0, 102, 0));
        delete_item_btn.setText("Delete item");
        delete_item_btn.setPreferredSize(new java.awt.Dimension(100, 29));
        delete_item_btn.setSize(new java.awt.Dimension(100, 9));
        delete_item_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_item_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanel1Layout = new javax.swing.GroupLayout(menuPanel1);
        menuPanel1.setLayout(menuPanel1Layout);
        menuPanel1Layout.setHorizontalGroup(
            menuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanel1Layout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addComponent(add_item_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(edit_item_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(delete_item_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        menuPanel1Layout.setVerticalGroup(
            menuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(menuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_item_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit_item_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_item_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        menuTabs.addTab("Full Menu", menuPanel1);

        menuPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuPanel2MouseClicked(evt);
            }
        });

        menuTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Menu_ID:", "Item_name:", "Price:", "Category:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(menuTable2);
        if (menuTable2.getColumnModel().getColumnCount() > 0) {
            menuTable2.getColumnModel().getColumn(0).setResizable(false);
            menuTable2.getColumnModel().getColumn(1).setResizable(false);
            menuTable2.getColumnModel().getColumn(2).setResizable(false);
            menuTable2.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout menuPanel2Layout = new javax.swing.GroupLayout(menuPanel2);
        menuPanel2.setLayout(menuPanel2Layout);
        menuPanel2Layout.setHorizontalGroup(
            menuPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                .addContainerGap())
        );
        menuPanel2Layout.setVerticalGroup(
            menuPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );

        menuTabs.addTab("Appetizer", menuPanel2);

        menuPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuPanel3MouseClicked(evt);
            }
        });

        menuTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Menu_ID:", "Item_name:", "Price:", "Category:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(menuTable3);
        if (menuTable3.getColumnModel().getColumnCount() > 0) {
            menuTable3.getColumnModel().getColumn(0).setResizable(false);
            menuTable3.getColumnModel().getColumn(1).setResizable(false);
            menuTable3.getColumnModel().getColumn(2).setResizable(false);
            menuTable3.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout menuPanel3Layout = new javax.swing.GroupLayout(menuPanel3);
        menuPanel3.setLayout(menuPanel3Layout);
        menuPanel3Layout.setHorizontalGroup(
            menuPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                .addContainerGap())
        );
        menuPanel3Layout.setVerticalGroup(
            menuPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        menuTabs.addTab("Main", menuPanel3);

        menuTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Menu_ID:", "Item_name:", "Price:", "Category:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(menuTable4);
        if (menuTable4.getColumnModel().getColumnCount() > 0) {
            menuTable4.getColumnModel().getColumn(0).setResizable(false);
            menuTable4.getColumnModel().getColumn(1).setResizable(false);
            menuTable4.getColumnModel().getColumn(2).setResizable(false);
            menuTable4.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout menuPanel4Layout = new javax.swing.GroupLayout(menuPanel4);
        menuPanel4.setLayout(menuPanel4Layout);
        menuPanel4Layout.setHorizontalGroup(
            menuPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                .addContainerGap())
        );
        menuPanel4Layout.setVerticalGroup(
            menuPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        menuTabs.addTab("Dessert", menuPanel4);

        menuTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Menu_ID:", "Item_name:", "Price:", "Category:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(menuTable5);
        if (menuTable5.getColumnModel().getColumnCount() > 0) {
            menuTable5.getColumnModel().getColumn(0).setResizable(false);
            menuTable5.getColumnModel().getColumn(1).setResizable(false);
            menuTable5.getColumnModel().getColumn(2).setResizable(false);
            menuTable5.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout menuPanel5Layout = new javax.swing.GroupLayout(menuPanel5);
        menuPanel5.setLayout(menuPanel5Layout);
        menuPanel5Layout.setHorizontalGroup(
            menuPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                .addContainerGap())
        );
        menuPanel5Layout.setVerticalGroup(
            menuPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        menuTabs.addTab("Beverages", menuPanel5);

        displayPanel.add(menuTabs, "card2");

        editItemPanel.setBackground(new java.awt.Color(255, 255, 255));
        editItemPanel.setMaximumSize(new java.awt.Dimension(600, 500));
        editItemPanel.setMinimumSize(new java.awt.Dimension(450, 400));
        editItemPanel.setPreferredSize(new java.awt.Dimension(600, 500));
        editItemPanel.setSize(new java.awt.Dimension(600, 500));

        editMenuID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMenuIDActionPerformed(evt);
            }
        });

        editPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPriceActionPerformed(evt);
            }
        });

        editMenuLabel.setText("Menu ID:");

        jLabel5.setText("Price:");

        jLabel6.setText("Item_name:");

        jLabel8.setText("Category:");

        editCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCategoryActionPerformed(evt);
            }
        });

        editItemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemNameActionPerformed(evt);
            }
        });

        editingTitlePanel.setBackground(new java.awt.Color(255, 255, 255));
        editingTitlePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 78, 34), 2));

        jLabel9.setFont(new java.awt.Font("New Peninim MT", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 78, 34));
        jLabel9.setText("Edit an Item");

        javax.swing.GroupLayout editingTitlePanelLayout = new javax.swing.GroupLayout(editingTitlePanel);
        editingTitlePanel.setLayout(editingTitlePanelLayout);
        editingTitlePanelLayout.setHorizontalGroup(
            editingTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editingTitlePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(198, 198, 198))
        );
        editingTitlePanelLayout.setVerticalGroup(
            editingTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editingTitlePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(17, 17, 17))
        );

        editBtn.setText("OK");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editItemPanelLayout = new javax.swing.GroupLayout(editItemPanel);
        editItemPanel.setLayout(editItemPanelLayout);
        editItemPanelLayout.setHorizontalGroup(
            editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editItemPanelLayout.createSequentialGroup()
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editItemPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(editingTitlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(editItemPanelLayout.createSequentialGroup()
                        .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editItemPanelLayout.createSequentialGroup()
                                .addGap(215, 215, 215)
                                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(editMenuLabel))
                                .addGap(31, 31, 31))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editItemPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)))
                        .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editMenuID, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(editItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(editItemPanelLayout.createSequentialGroup()
                .addGap(266, 266, 266)
                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        editItemPanelLayout.setVerticalGroup(
            editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editItemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editingTitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editMenuLabel)
                    .addComponent(editMenuID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(editPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(editCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editBtn)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        displayPanel.add(editItemPanel, "card3");

        showInventoryPanel.setBackground(new java.awt.Color(255, 255, 255));
        showInventoryPanel.setMaximumSize(new java.awt.Dimension(600, 500));
        showInventoryPanel.setMinimumSize(new java.awt.Dimension(450, 400));
        showInventoryPanel.setPreferredSize(new java.awt.Dimension(600, 500));

        addingTitlePanel2.setBackground(new java.awt.Color(255, 255, 255));
        addingTitlePanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 78, 34), 2));

        jLabel20.setFont(new java.awt.Font("New Peninim MT", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 78, 34));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Inventory");

        javax.swing.GroupLayout addingTitlePanel2Layout = new javax.swing.GroupLayout(addingTitlePanel2);
        addingTitlePanel2.setLayout(addingTitlePanel2Layout);
        addingTitlePanel2Layout.setHorizontalGroup(
            addingTitlePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addingTitlePanel2Layout.createSequentialGroup()
                .addContainerGap(194, Short.MAX_VALUE)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(198, 198, 198))
        );
        addingTitlePanel2Layout.setVerticalGroup(
            addingTitlePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addingTitlePanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addGap(17, 17, 17))
        );

        showInventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "item_id", "name", "quantity", "price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(showInventoryTable);
        if (showInventoryTable.getColumnModel().getColumnCount() > 0) {
            showInventoryTable.getColumnModel().getColumn(0).setResizable(false);
            showInventoryTable.getColumnModel().getColumn(1).setResizable(false);
            showInventoryTable.getColumnModel().getColumn(2).setResizable(false);
            showInventoryTable.getColumnModel().getColumn(3).setResizable(false);
        }

        restockLabel.setText("Rename of Inventory Items:");

        restockBtn.setText("Request for Restock");
        restockBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restockBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout showInventoryPanelLayout = new javax.swing.GroupLayout(showInventoryPanel);
        showInventoryPanel.setLayout(showInventoryPanelLayout);
        showInventoryPanelLayout.setHorizontalGroup(
            showInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showInventoryPanelLayout.createSequentialGroup()
                .addGroup(showInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showInventoryPanelLayout.createSequentialGroup()
                        .addGroup(showInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(showInventoryPanelLayout.createSequentialGroup()
                                .addGap(235, 235, 235)
                                .addComponent(jLabel17))
                            .addGroup(showInventoryPanelLayout.createSequentialGroup()
                                .addGap(213, 213, 213)
                                .addComponent(restockLabel)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(showInventoryPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(showInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addingTitlePanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane6))))
                .addContainerGap())
            .addGroup(showInventoryPanelLayout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(restockBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        showInventoryPanelLayout.setVerticalGroup(
            showInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showInventoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addingTitlePanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(restockLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(restockBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        displayPanel.add(showInventoryPanel, "card4");

        makeOrderTitlePanel.setBackground(new java.awt.Color(255, 255, 255));
        makeOrderTitlePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 78, 34), 2));

        jLabel14.setFont(new java.awt.Font("New Peninim MT", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 78, 34));
        jLabel14.setText("Make an Order");

        javax.swing.GroupLayout makeOrderTitlePanelLayout = new javax.swing.GroupLayout(makeOrderTitlePanel);
        makeOrderTitlePanel.setLayout(makeOrderTitlePanelLayout);
        makeOrderTitlePanelLayout.setHorizontalGroup(
            makeOrderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makeOrderTitlePanelLayout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(198, 198, 198))
        );
        makeOrderTitlePanelLayout.setVerticalGroup(
            makeOrderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makeOrderTitlePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(17, 17, 17))
        );

        menuListPanel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Menu_ID:", "Item_name:", "Price:", "Category:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        menuListPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuListPanelMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(menuListPanel);
        if (menuListPanel.getColumnModel().getColumnCount() > 0) {
            menuListPanel.getColumnModel().getColumn(0).setResizable(false);
            menuListPanel.getColumnModel().getColumn(1).setResizable(false);
            menuListPanel.getColumnModel().getColumn(2).setResizable(false);
            menuListPanel.getColumnModel().getColumn(3).setResizable(false);
        }

        menuListLabel.setText("Menu List");

        addItemOrderBtn.setText("Add");
        addItemOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemOrderBtnActionPerformed(evt);
            }
        });

        deleteItemOrderBtn.setText("Delete");
        deleteItemOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemOrderBtnActionPerformed(evt);
            }
        });

        quantityLabel.setText("Quantity:");

        noLabel.setText("No:");

        orderTextArea.setColumns(20);
        orderTextArea.setRows(5);
        jScrollPane7.setViewportView(orderTextArea);

        dineInCheckBox.setText("Dine in");
        dineInCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dineInCheckBoxActionPerformed(evt);
            }
        });

        pickUpTextBox.setText("Pickup");
        pickUpTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickUpTextBoxActionPerformed(evt);
            }
        });

        show_orders_btn.setForeground(new java.awt.Color(0, 102, 0));
        show_orders_btn.setText("Show orders");
        show_orders_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_orders_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout makeOrderPanelLayout = new javax.swing.GroupLayout(makeOrderPanel);
        makeOrderPanel.setLayout(makeOrderPanelLayout);
        makeOrderPanelLayout.setHorizontalGroup(
            makeOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makeOrderPanelLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(menuListLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(makeOrderPanelLayout.createSequentialGroup()
                .addGroup(makeOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(makeOrderPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(makeOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(makeOrderTitlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makeOrderPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane7))))
                    .addGroup(makeOrderPanelLayout.createSequentialGroup()
                        .addGroup(makeOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(makeOrderPanelLayout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addGroup(makeOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(makeOrderPanelLayout.createSequentialGroup()
                                        .addComponent(quantityLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(quantityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(makeOrderPanelLayout.createSequentialGroup()
                                        .addComponent(noLabel)
                                        .addGap(48, 48, 48)
                                        .addComponent(noTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(144, 144, 144))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makeOrderPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(addItemOrderBtn)
                                .addGap(18, 18, 18)
                                .addComponent(deleteItemOrderBtn)
                                .addGap(134, 134, 134)))
                        .addGroup(makeOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dineInCheckBox)
                            .addComponent(pickUpTextBox)
                            .addComponent(show_orders_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        makeOrderPanelLayout.setVerticalGroup(
            makeOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makeOrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(makeOrderTitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menuListLabel)
                .addGap(5, 5, 5)
                .addGroup(makeOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(makeOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noLabel)
                    .addComponent(dineInCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(makeOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pickUpTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quantityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(makeOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(show_orders_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addItemOrderBtn)
                    .addComponent(deleteItemOrderBtn))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        displayPanel.add(makeOrderPanel, "card6");

        showOrderTitle.setBackground(new java.awt.Color(255, 255, 255));
        showOrderTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 78, 34), 2));

        showOrderLabel.setFont(new java.awt.Font("New Peninim MT", 1, 24)); // NOI18N
        showOrderLabel.setForeground(new java.awt.Color(0, 78, 34));
        showOrderLabel.setText("Show Orders");

        javax.swing.GroupLayout showOrderTitleLayout = new javax.swing.GroupLayout(showOrderTitle);
        showOrderTitle.setLayout(showOrderTitleLayout);
        showOrderTitleLayout.setHorizontalGroup(
            showOrderTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showOrderTitleLayout.createSequentialGroup()
                .addContainerGap(207, Short.MAX_VALUE)
                .addComponent(showOrderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(198, 198, 198))
        );
        showOrderTitleLayout.setVerticalGroup(
            showOrderTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showOrderTitleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showOrderLabel)
                .addGap(17, 17, 17))
        );

        ordersPanel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No:", "Item_name:", "Quantity:", "Price:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ordersPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordersPanelMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(ordersPanel);
        if (ordersPanel.getColumnModel().getColumnCount() > 0) {
            ordersPanel.getColumnModel().getColumn(0).setResizable(false);
            ordersPanel.getColumnModel().getColumn(1).setResizable(false);
            ordersPanel.getColumnModel().getColumn(2).setResizable(false);
            ordersPanel.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout showOrderPanelLayout = new javax.swing.GroupLayout(showOrderPanel);
        showOrderPanel.setLayout(showOrderPanelLayout);
        showOrderPanelLayout.setHorizontalGroup(
            showOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(showOrderTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(showOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE))
        );
        showOrderPanelLayout.setVerticalGroup(
            showOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showOrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showOrderTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(457, Short.MAX_VALUE))
            .addGroup(showOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(showOrderPanelLayout.createSequentialGroup()
                    .addGap(48, 48, 48)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(33, Short.MAX_VALUE)))
        );

        displayPanel.add(showOrderPanel, "card7");

        rmsTitlePanel.setBackground(new java.awt.Color(94, 141, 103));
        rmsTitlePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 78, 34), 2));

        rmsTitleLabel.setFont(new java.awt.Font("New Peninim MT", 1, 36)); // NOI18N
        rmsTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        rmsTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rmsTitleLabel.setText("Restaurant Management System");

        jLabel2.setFont(new java.awt.Font("Webdings", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("æå");

        rightIcon.setFont(new java.awt.Font("Webdings", 0, 48)); // NOI18N
        rightIcon.setForeground(new java.awt.Color(255, 255, 255));
        rightIcon.setText("åæ");

        javax.swing.GroupLayout rmsTitlePanelLayout = new javax.swing.GroupLayout(rmsTitlePanel);
        rmsTitlePanel.setLayout(rmsTitlePanelLayout);
        rmsTitlePanelLayout.setHorizontalGroup(
            rmsTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rmsTitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addComponent(rmsTitleLabel)
                .addGap(18, 18, 18)
                .addComponent(rightIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        rmsTitlePanelLayout.setVerticalGroup(
            rmsTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rmsTitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rmsTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(rightIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addComponent(rmsTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(rmsTitlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rmsTitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(displayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void show_menu_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_menu_btnActionPerformed
        // TODO add your handling code here:
        //removes all existing panels
        displayPanel.removeAll();
        displayPanel.repaint();
        displayPanel.revalidate();
        //adds the menu tabs jtabbed panel
        displayPanel.add(menuTabs);
        displayPanel.repaint();
        displayPanel.revalidate();
        
        //connect to the database
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn= DriverManager.getConnection("jdbc:mysql://localhost:3306/logininfo?", "root", "");
            Statement stmt = conn.createStatement();
            
            //result set query to select from the menulist table
            ResultSet rs=stmt.executeQuery("Select * from menulist");
            DefaultTableModel menuTableModel = (DefaultTableModel)menuTable1.getModel();
            menuTableModel.setRowCount(0);
            //while there are items in the result set
            while(rs.next()){
                //data will be added until the the bottom of the table is reached
                Object table1[] = {rs.getInt("Menu_ID"),rs.getString("Item_name"), rs.getDouble("Price"), rs.getString("Category")};
                menuTableModel.addRow(table1);

            }
        }
        //executes catch statement if the try fails
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_show_menu_btnActionPerformed

    private void add_item_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_item_btnActionPerformed
        // TODO add your handling code here:
        //removing existing panels
        displayPanel.removeAll();
        displayPanel.repaint();
        displayPanel.revalidate();
        
        //displays the add item panel
        displayPanel.add(addItemPanel);
        displayPanel.repaint();
        displayPanel.revalidate();
        

    }//GEN-LAST:event_add_item_btnActionPerformed

    private void edit_item_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_item_btnActionPerformed
        // TODO add your handling code here:
        //remove all existing display panels
        displayPanel.removeAll();
        displayPanel.repaint();
        displayPanel.revalidate();
        
        //displays the edit item panel
        displayPanel.add(editItemPanel);
        displayPanel.repaint();
        displayPanel.revalidate();
       
    }//GEN-LAST:event_edit_item_btnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
        //log out buttton to close the current screen
        this.dispose();
        //calls the login in page object and displays it
        RestuarantManagement w=new RestuarantManagement();
        w.setVisible(true);
        w.pack();
        w.setLocation(null);
        w.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        //should close homepage on logout -figure out with maria
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void delete_item_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_item_btnActionPerformed
        // TODO add your handling code here:
        //variable options created to keep track of yes or no options
        String[] options={"Yes", "No"};
        Connection conn=null;
        //creates a window to display wether or not the user wants to delete or leave item in the menulist
        int answ=JOptionPane.showOptionDialog(null, "Are you sure you want to delete this item", "Delete confirm", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
        //if the user selects yes
        if (answ==0){
            //then connect to  the databsase
            try{
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/logininfo","root","");
            //databse query to delete an item from the menulist table
            PreparedStatement rs = conn.prepareStatement("DELETE from menulist WHERE Menu_ID=?");
            
            rs.setString(1, editMenuID.getText());
            //execute query
            rs.executeUpdate();
            //window pop that confirms the item has been deleted
            JOptionPane.showMessageDialog(this, "Item deleted");
            
            //execute catch if the try fails
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
      
            }
            //if the user selects no , then window pop that says it isnt deleted pops up
        }else{
            JOptionPane.showMessageDialog(null, "item not deleted");
        }
    }//GEN-LAST:event_delete_item_btnActionPerformed

    private void make_order_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_make_order_btnActionPerformed
        // TODO add your handling code here:
        //removes all existing display panels
        displayPanel.removeAll();
        displayPanel.repaint();
        displayPanel.revalidate();
        
        //adds the make order panel we created
        displayPanel.add(makeOrderPanel);
        displayPanel.repaint();
        displayPanel.revalidate();
        
        //execute try to call the database
        try{
            Class.forName("com.mysql.jdbc.Driver");
            //connects to our logininfo database
            Connection conn= DriverManager.getConnection("jdbc:mysql://localhost:3306/logininfo?", "root", "");
            Statement stmt = conn.createStatement();
            //result set intialized to the databse query
            ResultSet rs=stmt.executeQuery("Select * from menulist");
            
             //table mode creatde with menulist panel to display it
            DefaultTableModel menuTableModel = (DefaultTableModel)menuListPanel.getModel();

            menuTableModel.setRowCount(0);
            //while there exists items in the result set thehn add to the table model
            while(rs.next()){
             
                //data will be added until the the bottom of the table is reached
                Object table1[] = {rs.getInt("Menu_id"),rs.getString("Item_name"), rs.getDouble("Price"), rs.getString("Category")};
                //adding to the table model
                menuTableModel.addRow(table1);
                        
            }
        }
        //catch block executed if the try block doesnt execute
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_make_order_btnActionPerformed

    private void show_orders_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_orders_btnActionPerformed
        // TODO add your handling code here:
        //display all items in database
        //remove all existing display panels
        displayPanel.removeAll();
        displayPanel.repaint();
        displayPanel.revalidate();
        
        //display the show order panel
        displayPanel.add(showOrderPanel);
        displayPanel.repaint();
        displayPanel.revalidate();
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn= DriverManager.getConnection("jdbc:mysql://localhost:3306/logininfo?", "root", "");
            Statement stmt = conn.createStatement();
            
            //resultset created and set to the sql query that will grab the information from the orderlist table
            ResultSet rs=stmt.executeQuery("Select * from orderlist");
            //create table model with the order panel
            DefaultTableModel menuTableModel = (DefaultTableModel)ordersPanel.getModel();
            menuTableModel.setRowCount(0);
            //while there exists items in the result set
            while(rs.next()){
                //data will be added until the the bottom of the table is reached
                Object table1[] = {rs.getInt("No"),rs.getString("Item_name"), rs.getInt("Quantity"), rs.getDouble("Price")};
                //we will add the information to the table mode;
                menuTableModel.addRow(table1);

            }
        }
        //catch block executed if the try block fails
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_show_orders_btnActionPerformed

    private void show_inventory_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_inventory_btnActionPerformed
        // TODO add your handling code here:
        //display all items in database -goal of this function
        
        //removes all existing display panels
        displayPanel.removeAll();
        displayPanel.repaint();
        displayPanel.revalidate();
        
        //adds showinventory panel that we have created
        displayPanel.add(showInventoryPanel);
        displayPanel.repaint();
        displayPanel.revalidate();
        
        //database connection
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn= DriverManager.getConnection("jdbc:mysql://localhost:3306/logininfo?", "root", "");
            Statement stmt = conn.createStatement();
            
            //result set to execute the select from inventory list query
            //inventory list being the name of the table in the database
            ResultSet rs=stmt.executeQuery("Select * from inventorylist");
            //create table model that we will add infomation to
            DefaultTableModel menuTableModel = (DefaultTableModel)showInventoryTable.getModel();
            menuTableModel.setRowCount(0);
            
            //while there exists information in the result set
            while(rs.next()){
                //data will be added until the the bottom of the table is reached
                Object table1[] = {rs.getInt("item_id"),rs.getString("name"), rs.getInt("quantity"), rs.getDouble("price")};
                //add the row of information retrieved to the menutablemodel to be displayed
                menuTableModel.addRow(table1);

            }
        }
        //catch exception executed if try fails
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_show_inventory_btnActionPerformed

    private void addMenuID1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMenuID1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addMenuID1ActionPerformed

    private void addPrice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPrice1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addPrice1ActionPerformed

    private void addItemName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addItemName1ActionPerformed

    private void addItemBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemBtn1ActionPerformed
        //establish conection 
        //first create connection variable and set to null
        Connection conn=null;
        try{
            //connect to the database in the server
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/logininfo","root","");
            //result set excecutes query to the menulist table in the database with specific values
            PreparedStatement rs = conn.prepareStatement("Insert into menulist(Menu_ID,Item_name,Price,Category)values(?,?,?,?)");
            
            //it adds the values of the text boxes to the result set updating the database
            rs.setString(1, addMenuID1.getText());
            rs.setString(2, addItemName1.getText());
            rs.setString(3, addPrice1.getText());
            rs.setString(4, addCategory1.getText());
            //executes the database query
            
            rs.executeUpdate();
            //opens up a window when the item is successfully added
            JOptionPane.showMessageDialog(this, "Item added");
            
            //clears the text boxes after add so multiple items can be added back to back
            addMenuID1.setText("");
            addItemName1.setText("");
            addPrice1.setText("");
            addCategory1.setText("");
        //catch exception executes if the try block doesnt or database cannot be connected to 
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
      
        }
    }//GEN-LAST:event_addItemBtn1ActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
        
        //string variables set to null that we are going to use to store the values of each row
        String menu_id = null;
        String item_name = null;
        String price = null;
        String category = null;
        //menutable table model
        DefaultTableModel tblModel = (DefaultTableModel)menuTable1.getModel();
        //get selected row, if the row selected is only one row then it executes the if, if not it executes the else
        if (menuTable1.getSelectedRowCount() == 1){
            //if single row is selected store the values in variables
            menu_id = editMenuID.getText();
            item_name = editItemName.getText();
            price = editPrice.getText();
            category = editCategory.getText();
            
            //set updated value on table row
            tblModel.setValueAt(menu_id, menuTable1.getSelectedRow(), 0);
            tblModel.setValueAt(item_name, menuTable1.getSelectedRow(), 1);
            tblModel.setValueAt(price, menuTable1.getSelectedRow(), 2);
            tblModel.setValueAt(category, menuTable1.getSelectedRow(), 3);
           
        //if the table is empty then it brings up a table is empty window message   
        }else{
            if (menuTable1.getRowCount()== 0){
                JOptionPane.showMessageDialog(this, "Table is Empty");
            //if it is anything else then it brings up another message dialog window
            }else{
                JOptionPane.showMessageDialog(this, "Please select a single row for update...");
            }
        }
        //connecting to the database
        Connection conn=null;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/logininfo","root","");
            //specific databse query to update an item in the database stored in a prepared statement
            PreparedStatement rs = conn.prepareStatement("UPDATE menulist SET Menu_ID=?,Item_name=?, Price=?, Category=? WHERE Menu_ID='"+menu_id+"'");
            
            //it adds the values in the text boxes to the prepared statement result set
            rs.setString(1, editMenuID.getText());
            rs.setString(2, editItemName.getText());
            rs.setString(3, editPrice.getText());
            rs.setString(4, editCategory.getText());
            //executes query and message dialog pops up
            rs.executeUpdate();
            JOptionPane.showMessageDialog(this, "Item updated");
           //after the item has been edited, it clears the text box for new edits and entries
            editMenuID.setText("");
            editItemName.setText("");
            editPrice.setText("");
            editCategory.setText("");
        //catch block executes if database connection fails
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
     
    }//GEN-LAST:event_editBtnActionPerformed

    private void editItemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editItemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editItemNameActionPerformed

    private void editCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editCategoryActionPerformed

    private void editPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editPriceActionPerformed

    private void editMenuIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMenuIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editMenuIDActionPerformed

    private void menuTabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTabsMouseClicked
        //remove all current panels before displaying the menu tabs panel
        displayPanel.removeAll();
        displayPanel.repaint();
        displayPanel.revalidate();
        
        //displays menu tabs panel we created and repaints it thus showing it
        displayPanel.add(menuTabs);
        displayPanel.repaint();
        displayPanel.revalidate();
        
        //extension variables and table variables that are set to different values depeneding on the menu options
        var extension = "";
        //the extension variable is a more specific call to the database created that stores the menu items
        var table = menuTable1;
        if (menuTabs.getSelectedIndex() == 0){
            extension = "";
            table =menuTable1;
        }else if(menuTabs.getSelectedIndex() == 1){
            extension = " where Category='Appetizer'";
            table =menuTable2;
        }else if (menuTabs.getSelectedIndex() == 2){
            extension = " where Category='Main'";
            table =menuTable3;
        }else if(menuTabs.getSelectedIndex() == 3){
            extension = " where Category='Dessert'";
            table =menuTable4;
        }else if(menuTabs.getSelectedIndex() == 4){
            extension = " where Category='Beverage'";
            table =menuTable5;
        }
        
        //database connection
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn= DriverManager.getConnection("jdbc:mysql://localhost:3306/logininfo?", "root", "");
            Statement stmt = conn.createStatement();
            
            //creates a result set query with the specific extension and adds that to the table that will be displayed
            ResultSet rs=stmt.executeQuery("Select * from menulist" + extension);
            
            //creating the table model with the correct table paremeters
            DefaultTableModel menuTableModel = (DefaultTableModel)table.getModel();
            menuTableModel.setRowCount(0);
            
            //while there exists content in the result set
            while(rs.next()){
                //data will be added until the the bottom of the table is reached
                Object table1[] = {rs.getInt("Menu_ID"),rs.getString("Item_name"), rs.getDouble("Price"), rs.getString("Category")};
                menuTableModel.addRow(table1);
            }
        }
        //this case runs if there is a problem with the database connection
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_menuTabsMouseClicked

    private void menuPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuPanel3MouseClicked


    }//GEN-LAST:event_menuPanel3MouseClicked

    private void menuPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuPanel1MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_menuPanel1MouseClicked

    private void menuPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuPanel2MouseClicked
     
    }//GEN-LAST:event_menuPanel2MouseClicked

    private void addCategory1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategory1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCategory1ActionPerformed

    private void menuTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTable1MouseClicked
        // TODO add your handling code here:
        //cretes a table model of the first menu table
        DefaultTableModel tblmodel = (DefaultTableModel)menuTable1.getModel();
        
        //string variables to store the values at the selcted row
        String Menu_id = tblmodel.getValueAt(menuTable1.getSelectedRow(), 0).toString();
        String Item_name = tblmodel.getValueAt(menuTable1.getSelectedRow(), 1).toString();
        String Price = tblmodel.getValueAt(menuTable1.getSelectedRow(), 2).toString();
        String Category = tblmodel.getValueAt(menuTable1.getSelectedRow(), 3).toString();
        
        //setting the text boxes to the values gotten from the table row
        editMenuID.setText(Menu_id);
        editItemName.setText(Item_name);
        editPrice.setText(Price);
        editCategory.setText(Category);

    }//GEN-LAST:event_menuTable1MouseClicked

    private void menuListPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuListPanelMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblmodel2 = (DefaultTableModel)menuListPanel.getModel();
        
        //created variables to store info in the menulist panel
        String Menu_id = tblmodel2.getValueAt(menuListPanel.getSelectedRow(), 0).toString();
        String Item_name = tblmodel2.getValueAt(menuListPanel.getSelectedRow(), 1).toString();
        String Price = tblmodel2.getValueAt(menuListPanel.getSelectedRow(), 2).toString();
        String Category = tblmodel2.getValueAt(menuListPanel.getSelectedRow(), 3).toString();
      
    }//GEN-LAST:event_menuListPanelMouseClicked

    private void addItemOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemOrderBtnActionPerformed
        //variables to store the information of the order table
        int no = 0;
        String item_name = null;
        int quantity = 0;
        Double price = 0.0;
        //index variable will allow us to get a value at a specific column in the table
        int index = menuListPanel.getSelectedRow();
        
        //created table model that we will use to display the menu table
        TableModel model1 = menuListPanel.getModel();
        
        //we assign the correct values of each variable 
        no = Integer.valueOf(noTxtField.getText());
        item_name = model1.getValueAt(index, 1).toString();
        quantity = Integer.valueOf(quantityTxtField.getText());
        price = (Double) model1.getValueAt(index, 2);
        
        //database connection
        try{
            Class.forName("com.mysql.jdbc.Driver");
            //connect to the local host server and database
            Connection conn= DriverManager.getConnection("jdbc:mysql://localhost:3306/logininfo?", "root", "");
            //sql command that will be executed to insert the items into the order list database
            PreparedStatement rs=conn.prepareStatement("Insert into orderlist (No,Item_name,Quantity,Price)values(?,?,?,?)");
            
            //adding the correct variables in the right index to the result set
            rs.setInt(1, no);
            rs.setString(2, item_name);
            rs.setInt(3, quantity);
            rs.setDouble(4, price);
            //execute the query
            
            rs.executeUpdate();
            //execution is connected to text area so when an item is successfully added, it is displayed in the text area
            JOptionPane.showMessageDialog(this, "Order added, click show orders to view updated orders!");
            orderTextArea.append("\tRestaurant Management System:\n" +
                "\tOrders:\t\t\t" +
                "\n=====================\n" +
                       "Customer: " + no + " ordered: " + "\n" +  
                "{ CustId: " + no + ", " + "\n" +
                "Item name: "+item_name + "," + "\n" + 
                "Quantity: " + quantity + ", " + "\n" +
                "Price: $" + (quantity * price) + " }\n" +
                "======================" + "\n" + 
                "\n\t\t ");
        //catch executed if the database cannot be conected to
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_addItemOrderBtnActionPerformed

    private void ordersPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordersPanelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ordersPanelMouseClicked

    private void deleteItemOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemOrderBtnActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        //string variable options created to store yes or no values and indexs
        String[] options={"Yes", "No"};
        Connection conn=null;
        // pops up a message dialog box with the yes or no options
        int answ=JOptionPane.showOptionDialog(null, "Are you sure you want to delete this item", "Delete confirm", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
        
        //index 0 means yes and index 1 means no
        //if the user selects yes then we can make a call to the database and execute delete command
        if (answ==0){
            try{
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/logininfo","root","");
            //sql delete query
            PreparedStatement rs = conn.prepareStatement("DELETE from orderlist WHERE No=?");
            
            //add the number in the text field to the result set
            rs.setString(1, noTxtField.getText());
            
            //execute the result set 
            rs.executeUpdate();
            //screen window that confirms that the item was successfully deleted
            JOptionPane.showMessageDialog(this, "Item deleted, click show orders to view updated orders!");
   
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
      
            }
        //this case executes a window if the user selects no and the item isnt deleted 
        }else{
            JOptionPane.showMessageDialog(null, "item not deleted");
        }
            
        
    }//GEN-LAST:event_deleteItemOrderBtnActionPerformed

    private void restockBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restockBtnActionPerformed
        // TODO add your handling code here:
        //restock button that will pop a window when selected
        JOptionPane.showMessageDialog(this,"Restock request sent!");
    }//GEN-LAST:event_restockBtnActionPerformed

    private void dineInCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dineInCheckBoxActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,"Order is now marked dine in! ");
    }//GEN-LAST:event_dineInCheckBoxActionPerformed

    private void pickUpTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickUpTextBoxActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,"Order is now marked pick up!");
    }//GEN-LAST:event_pickUpTextBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //runs a call to the Homepage object and makes it visible 
                new HomePage().setVisible(true);
            }
        });
    }
//private variables declared
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addCategory1;
    private javax.swing.JButton addItemBtn1;
    private javax.swing.JTextField addItemName1;
    private javax.swing.JButton addItemOrderBtn;
    private javax.swing.JPanel addItemPanel;
    private javax.swing.JTextField addMenuID1;
    private javax.swing.JTextField addPrice1;
    private javax.swing.JButton add_item_btn;
    private javax.swing.JPanel addingTitlePanel1;
    private javax.swing.JPanel addingTitlePanel2;
    private javax.swing.JButton deleteItemOrderBtn;
    private javax.swing.JButton delete_item_btn;
    private javax.swing.JCheckBox dineInCheckBox;
    private javax.swing.JPanel displayPanel;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField editCategory;
    private javax.swing.JTextField editItemName;
    private javax.swing.JPanel editItemPanel;
    private javax.swing.JTextField editMenuID;
    private javax.swing.JLabel editMenuLabel;
    private javax.swing.JTextField editPrice;
    private javax.swing.JButton edit_item_btn;
    private javax.swing.JPanel editingTitlePanel;
    private javax.swing.JPanel food_inventory_panel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JPanel makeOrderPanel;
    private javax.swing.JPanel makeOrderTitlePanel;
    private javax.swing.JButton make_order_btn;
    private javax.swing.JLabel menuListLabel;
    private javax.swing.JTable menuListPanel;
    private javax.swing.JPanel menuPanel1;
    private javax.swing.JPanel menuPanel2;
    private javax.swing.JPanel menuPanel3;
    private javax.swing.JPanel menuPanel4;
    private javax.swing.JPanel menuPanel5;
    private javax.swing.JTable menuTable1;
    private javax.swing.JTable menuTable2;
    private javax.swing.JTable menuTable3;
    private javax.swing.JTable menuTable4;
    private javax.swing.JTable menuTable5;
    private javax.swing.JTabbedPane menuTabs;
    private javax.swing.JLabel noLabel;
    private javax.swing.JTextField noTxtField;
    private javax.swing.JTextArea orderTextArea;
    private javax.swing.JTable ordersPanel;
    private javax.swing.JCheckBox pickUpTextBox;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JTextField quantityTxtField;
    private javax.swing.JButton restockBtn;
    private javax.swing.JLabel restockLabel;
    private javax.swing.JLabel rightIcon;
    private javax.swing.JLabel rmsTitleLabel;
    private javax.swing.JPanel rmsTitlePanel;
    private javax.swing.JPanel showInventoryPanel;
    private javax.swing.JTable showInventoryTable;
    private javax.swing.JLabel showOrderLabel;
    private javax.swing.JPanel showOrderPanel;
    private javax.swing.JPanel showOrderTitle;
    private javax.swing.JButton show_inventory_btn;
    private javax.swing.JButton show_menu_btn;
    private javax.swing.JButton show_orders_btn;
    // End of variables declaration//GEN-END:variables

    private Boolean menuTabsMouseClicked(JPanel menuPanel2) {
        return true;
    }
}
